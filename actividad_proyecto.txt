Administrador del sistema:
user:admin
pass:admin

Modificación de portfolio/models.py
	Se agregó from django.db.models.fields
	se creó la clase proyectos
	
python manage.py makemigrations
python manage.py migration

Se crea el super usuario para la administración del sitio
	user:admin
	pass:admin
	
Desde el modulo de portfolio/ se edita admin.py para registrar el modelo
y se haga visible en la consola de http://127.0.0.1:8000/admin

Desde el módulo de admin, una vez registrado el modelo (Proyecto) se 
pueden ir agregando los proyectos desde la página de django

Hay que modificar en django_proyecto_cac setting.py para poder ver las imagenes
y luego de STATIC_URL se agrega
	MEDIA_ROOT = BASE_DIR / 'media'
para que todas las imagenes sean comunes a los proyectos

Luego hay que modificar urls.py y agregar

	from django.conf import settings
	from django.conf.urls.static import static
	
y debajo de urlpatterns:
	urlpatterns+=static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
	
Dentro de  portfolio creamos la carpeta templates que contendran nuestros html
En views de portfolio editamos views.py y agregamos la función que queremos renderizar
En urls.py colocamos el include para colocar las otras urls que iremos definiendo en cada urls.py de cada app
	
En la parte de Blog creamos el modelo. 
Ahora lo incluimos en el registro
Una vez creado el modelo en models.py del blog, hay que migrar el nuevo modelo a la Base de Datos:
	python manage.py makemigrations
	python manage.py migrate

Reutilización de los html
	El contenido de los html que vamos generando con Django los podemos ir exportando a un solo hmtl que podremos
	reutilizar para agregarle los contenidos y el formato. En nuestro caso está en
	/portfolio/templates/layout.html	

	Le agregamos los estilos con bootstrap. Se crea el portfolio/partials/navbar.html